trigger:
  - master

jobs:
  - job: Windows

    pool:
      vmImage: 'vs2017-win2016'

    strategy:
      matrix:
        Python37:
          python.arch: 'x86'
          python.version: '3.7'
        Python37-x64:
          python.arch: 'x64'
          python.version: '3.7'
      maxParallel: 2

    steps:

      - powershell: |
          $environmentVars = get-childitem -path env:*
          foreach($var in $environmentVars)
          {
            $keyname = $var.Key
            $keyvalue = $var.Value

            Write-Output "${keyname}: $keyvalue"
          }
        displayName: Display env. variables


      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python.version)'
          addToPath: true
          architecture: '$(python.arch)'

      - script: |
          python -m pip install -U scikit-ci scikit-ci-addons
          python -m ci_addons --install ../addons
        displayName: Prerequisites

      - script: python -m ci install
        displayName: Install

      - script: python -m ci build
        displayName: Build

      - script: python -m ci test
        displayName: Test
        env:
          # Used in 'test_platform_windows_find_visual_studio'
          # See https://github.com/Microsoft/azure-pipelines-image-generation/blob/master/images/win/Vs2017-Server2016-Readme.md
          SKBUILD_TEST_FIND_VS2008_INSTALLATION_EXPECTED: 0
          SKBUILD_TEST_FIND_VS2010_INSTALLATION_EXPECTED: 0
          SKBUILD_TEST_FIND_VS2012_INSTALLATION_EXPECTED: 0
          SKBUILD_TEST_FIND_VS2013_INSTALLATION_EXPECTED: 0
          SKBUILD_TEST_FIND_VS2015_INSTALLATION_EXPECTED: 1
          SKBUILD_TEST_FIND_VS2017_INSTALLATION_EXPECTED: 1

      - script: python -m ci after_test
        displayName: After Test
        env:
          CODECOV_TOKEN: $(codecov_token)

#  - job: Linux_PyPy3
#    pool:
#      vmIMage: 'ubuntu-16.04'
#    steps:
#      - script: printenv
#        displayName: Display env. variables
#      - script: |
#          sudo apt-get -yq update
#          sudo apt-get -yq install libxml2-dev libxslt-dev gfortran
#        displayName: 'Install packages needed for source builds'
#      - script: |
#          wget -q http://buildbot.pypy.org/nightly/py3.6/pypy-c-jit-latest-linux64.tar.bz2 -O ../pypy.tar.bz2
#          mkdir -p ../pypy3
#          (cd ../pypy3; tar --strip-components=1 -xf ../pypy.tar.bz2)
#          ../pypy3/bin/pypy3 -m ensurepip
#          ../pypy3/bin/pypy3 -m pip install virtualenv
#          ../pypy3/bin/virtualenv ../pypy-venv
#        displayName: 'Get PyPy'

#      - script: |
#          source ../pypy-venv/bin/activate
#          python -m pip install -U scikit-ci scikit-ci-addons
#          python -m ci_addons --install ../addons
#        displayName: Prerequisites

#      - script: |
#          source ../pypy-venv/bin/activate
#          python -m ci install
#        displayName: Install

#      - script: |
#          source ../pypy-venv/bin/activate
#          python -m ci build
#        displayName: Build

#      - script: |
#          source ../pypy-venv/bin/activate
#          python -m ci test
#        displayName: Test

#      - script: |
#          source ../pypy-venv/bin/activate
#          python -m ci after_test
#        displayName: After Test
#        env:
#          CODECOV_TOKEN: $(codecov_token)
